{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nguyen\\\\Desktop\\\\GitHub\\\\netflix_clone\\\\providers\\\\trending.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { filterPreferredResults } from \"../utils/tmdb\";\nimport tmdbApi from \"../api/tmdb\";\nvar TrendingContext = createContext({\n  trending: [],\n  error: null,\n  isLoading: false\n});\nexport function useTrendingState() {\n  return useContext(TrendingContext);\n}\nexport function TrendingProvider(props) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      trending = _useState2[0],\n      setTrending = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  function loadTrending() {\n    var json;\n    return _regeneratorRuntime.async(function loadTrending$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setLoading(true);\n            setError(null);\n            _context.prev = 2;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(tmdbApi.get('/trending/all/day'));\n\n          case 5:\n            json = _context.sent;\n            setTrending(filterPreferredResults(json.results));\n            _context.next = 12;\n            break;\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](2);\n            setError(_context.t0);\n\n          case 12:\n            setLoading(false);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[2, 9]], Promise);\n  }\n\n  useEffect(function () {\n    loadTrending();\n  }, []);\n  return React.createElement(TrendingContext.Provider, _extends({\n    value: {\n      trending: trending,\n      isLoading: isLoading,\n      error: error\n    }\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/Nguyen/Desktop/GitHub/netflix_clone/providers/trending.js"],"names":["React","createContext","useContext","useEffect","useState","filterPreferredResults","tmdbApi","TrendingContext","trending","error","isLoading","useTrendingState","TrendingProvider","props","setTrending","setLoading","setError","loadTrending","get","json","results"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AAEA,SAASC,sBAAT;AACA,OAAOC,OAAP;AAEA,IAAMC,eAAe,GAAGN,aAAa,CAAC;AACpCO,EAAAA,QAAQ,EAAE,EAD0B;AAEpCC,EAAAA,KAAK,EAAE,IAF6B;AAGpCC,EAAAA,SAAS,EAAE;AAHyB,CAAD,CAArC;AAMA,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAOT,UAAU,CAACK,eAAD,CAAjB;AACD;AAED,OAAO,SAASK,gBAAT,CAA0BC,KAA1B,EAAiC;AACtC,kBAAgCT,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOI,QAAP;AAAA,MAAiBM,WAAjB;;AACA,mBAAgCV,QAAQ,CAAC,KAAD,CAAxC;AAAA;AAAA,MAAOM,SAAP;AAAA,MAAkBK,UAAlB;;AACA,mBAA0BX,QAAQ,CAAC,IAAD,CAAlC;AAAA;AAAA,MAAOK,KAAP;AAAA,MAAcO,QAAd;;AAEA,WAAeC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACEF,YAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,YAAAA,QAAQ,CAAC,IAAD,CAAR;AAFF;AAAA;AAAA,6CAKuBV,OAAO,CAACY,GAAR,CAAY,mBAAZ,CALvB;;AAAA;AAKUC,YAAAA,IALV;AAMIL,YAAAA,WAAW,CAACT,sBAAsB,CAACc,IAAI,CAACC,OAAN,CAAvB,CAAX;AANJ;AAAA;;AAAA;AAAA;AAAA;AAQIJ,YAAAA,QAAQ,aAAR;;AARJ;AAWED,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAcAZ,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,YAAY;AACb,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,oBAAC,eAAD,CAAiB,QAAjB;AACE,IAAA,KAAK,EAAE;AAAET,MAAAA,QAAQ,EAARA,QAAF;AAAYE,MAAAA,SAAS,EAATA,SAAZ;AAAuBD,MAAAA,KAAK,EAALA;AAAvB;AADT,KAEMI,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAMD","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nimport { filterPreferredResults } from 'utils/tmdb';\nimport tmdbApi from 'api/tmdb';\n\nconst TrendingContext = createContext({\n  trending: [],\n  error: null,\n  isLoading: false,\n});\n\nexport function useTrendingState() {\n  return useContext(TrendingContext);\n}\n\nexport function TrendingProvider(props) {\n  const [trending, setTrending] = useState([]);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  async function loadTrending() {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const json = await tmdbApi.get('/trending/all/day');\n      setTrending(filterPreferredResults(json.results));\n    } catch (error) {\n      setError(error);\n    }\n\n    setLoading(false);\n  }\n\n  useEffect(() => {\n    loadTrending();\n  }, []);\n\n  return (\n    <TrendingContext.Provider\n      value={{ trending, isLoading, error }}\n      {...props}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}