{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\Nguyen\\\\Desktop\\\\GitHub\\\\netflix_clone\\\\ui\\\\MediaCard.js\";\nimport React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useNavigation } from '@react-navigation/native';\nimport { AppScreens } from \"../utils/screen\";\nimport { generateImageUrl, ImageSizes } from \"../utils/tmdb\";\nimport logo from \"../assets/logo.png\";\nimport styleVars from \"../utils/styles\";\nvar styles = StyleSheet.create({\n  root: {\n    position: 'relative',\n    borderRadius: styleVars.borderRadius,\n    overflow: 'hidden'\n  },\n  poster: {\n    backgroundColor: styleVars.secondaryBackgroundColor,\n    aspectRatio: styleVars.posterAspectRatio\n  },\n  fixedWidth: {\n    width: styleVars.cardWidth\n  }\n});\n\nfunction MediaCard(_ref) {\n  var data = _ref.data,\n      _ref$freeWidth = _ref.freeWidth,\n      freeWidth = _ref$freeWidth === void 0 ? false : _ref$freeWidth,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      remainingProps = _objectWithoutProperties(_ref, [\"data\", \"freeWidth\", \"style\"]);\n\n  var navigation = useNavigation();\n  var imageSource = logo,\n      isPlaceholder = true;\n\n  if (data.poster_path) {\n    imageSource = {\n      uri: generateImageUrl(data.poster_path, ImageSizes.card)\n    };\n    isPlaceholder = false;\n  }\n\n  return React.createElement(TouchableOpacity, _extends({\n    onPress: function onPress() {\n      return navigation.push(AppScreens.detail, {\n        mediaType: data.media_type,\n        id: data.id\n      });\n    },\n    style: [styles.root, style]\n  }, remainingProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), React.createElement(ImageBackground, {\n    resizeMode: isPlaceholder ? 'center' : 'cover',\n    style: [styles.poster, !freeWidth && styles.fixedWidth],\n    source: imageSource,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MediaCard;","map":{"version":3,"sources":["C:/Users/Nguyen/Desktop/GitHub/netflix_clone/ui/MediaCard.js"],"names":["React","useNavigation","AppScreens","generateImageUrl","ImageSizes","logo","styleVars","styles","StyleSheet","create","root","position","borderRadius","overflow","poster","backgroundColor","secondaryBackgroundColor","aspectRatio","posterAspectRatio","fixedWidth","width","cardWidth","MediaCard","data","freeWidth","style","remainingProps","navigation","imageSource","isPlaceholder","poster_path","uri","card","push","detail","mediaType","media_type","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,UAAT;AACA,SAASC,gBAAT,EAA2BC,UAA3B;AACA,OAAOC,IAAP;AACA,OAAOC,SAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,UADN;AAEJC,IAAAA,YAAY,EAAEN,SAAS,CAACM,YAFpB;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GADyB;AAM/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,eAAe,EAAET,SAAS,CAACU,wBADrB;AAENC,IAAAA,WAAW,EAAEX,SAAS,CAACY;AAFjB,GANuB;AAU/BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,KAAK,EAAEd,SAAS,CAACe;AADP;AAVmB,CAAlB,CAAf;;AAeA,SAASC,SAAT,OAA+E;AAAA,MAA1DC,IAA0D,QAA1DA,IAA0D;AAAA,4BAApDC,SAAoD;AAAA,MAApDA,SAAoD,+BAAxC,KAAwC;AAAA,wBAAjCC,KAAiC;AAAA,MAAjCA,KAAiC,2BAAzB,EAAyB;AAAA,MAAlBC,cAAkB;;AAC7E,MAAMC,UAAU,GAAG1B,aAAa,EAAhC;AACA,MAAI2B,WAAW,GAAGvB,IAAlB;AAAA,MACEwB,aAAa,GAAG,IADlB;;AAEA,MAAIN,IAAI,CAACO,WAAT,EAAsB;AACpBF,IAAAA,WAAW,GAAG;AAAEG,MAAAA,GAAG,EAAE5B,gBAAgB,CAACoB,IAAI,CAACO,WAAN,EAAmB1B,UAAU,CAAC4B,IAA9B;AAAvB,KAAd;AACAH,IAAAA,aAAa,GAAG,KAAhB;AACD;;AACD,SACE,oBAAC,gBAAD;AACE,IAAA,OAAO,EAAE;AAAA,aACPF,UAAU,CAACM,IAAX,CAAgB/B,UAAU,CAACgC,MAA3B,EAAmC;AACjCC,QAAAA,SAAS,EAAEZ,IAAI,CAACa,UADiB;AAEjCC,QAAAA,EAAE,EAAEd,IAAI,CAACc;AAFwB,OAAnC,CADO;AAAA,KADX;AAOE,IAAA,KAAK,EAAE,CAAC9B,MAAM,CAACG,IAAR,EAAce,KAAd;AAPT,KAQMC,cARN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUE,oBAAC,eAAD;AACE,IAAA,UAAU,EAAEG,aAAa,GAAG,QAAH,GAAc,OADzC;AAEE,IAAA,KAAK,EAAE,CAACtB,MAAM,CAACO,MAAR,EAAgB,CAACU,SAAD,IAAcjB,MAAM,CAACY,UAArC,CAFT;AAGE,IAAA,MAAM,EAAES,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF;AAkBD;;AAED,eAAeN,SAAf","sourcesContent":["import React from 'react';\nimport { ImageBackground, StyleSheet, TouchableOpacity } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { AppScreens } from 'utils/screen';\nimport { generateImageUrl, ImageSizes } from '../utils/tmdb';\nimport logo from 'assets/logo.png';\nimport styleVars from 'utils/styles';\n\nconst styles = StyleSheet.create({\n  root: {\n    position: 'relative',\n    borderRadius: styleVars.borderRadius,\n    overflow: 'hidden',\n  },\n  poster: {\n    backgroundColor: styleVars.secondaryBackgroundColor,\n    aspectRatio: styleVars.posterAspectRatio,\n  },\n  fixedWidth: {\n    width: styleVars.cardWidth,\n  },\n});\n\nfunction MediaCard({ data, freeWidth = false, style = {}, ...remainingProps }) {\n  const navigation = useNavigation();\n  let imageSource = logo,\n    isPlaceholder = true;\n  if (data.poster_path) {\n    imageSource = { uri: generateImageUrl(data.poster_path, ImageSizes.card) };\n    isPlaceholder = false;\n  }\n  return (\n    <TouchableOpacity\n      onPress={() =>\n        navigation.push(AppScreens.detail, {\n          mediaType: data.media_type,\n          id: data.id,\n        })\n      }\n      style={[styles.root, style]}\n      {...remainingProps}\n    >\n      <ImageBackground\n        resizeMode={isPlaceholder ? 'center' : 'cover'}\n        style={[styles.poster, !freeWidth && styles.fixedWidth]}\n        source={imageSource}\n      />\n    </TouchableOpacity>\n  );\n}\n\nexport default MediaCard;\n"]},"metadata":{},"sourceType":"module"}