{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nguyen\\\\Desktop\\\\GitHub\\\\netflix_clone\\\\screens\\\\home\\\\Banner.js\";\nimport React from 'react';\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useNavigation } from '@react-navigation/native';\nimport { Button, HintLayout, IconButton, LoadingLayout } from \"../../ui/general\";\nimport { generateImageUrl, ImageSizes } from \"../../utils/tmdb\";\nimport { useTrendingState } from \"../../providers/trending\";\nimport styleVars from \"../../utils/styles\";\nimport { AppScreens } from \"../../utils/screen\";\nvar styles = StyleSheet.create({\n  root: {\n    position: 'relative',\n    aspectRatio: styleVars.posterAspectRatio\n  },\n  actions: {\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    position: 'absolute',\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    height: styleVars.headerHeight\n  },\n  mainAction: {\n    marginHorizontal: 0\n  }\n});\n\nfunction Banner() {\n  var navigation = useNavigation();\n\n  var _useTrendingState = useTrendingState(),\n      trending = _useTrendingState.trending,\n      isLoading = _useTrendingState.isLoading,\n      error = _useTrendingState.error;\n\n  if (isLoading) {\n    return React.createElement(View, {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, React.createElement(LoadingLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }));\n  } else if (error) {\n    return React.createElement(View, {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(HintLayout, {\n      message: \"Failed to load!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }));\n  } else if (trending.length > 0) {\n    var mostTrending = trending[0];\n    return React.createElement(ImageBackground, {\n      style: styles.root,\n      source: {\n        uri: generateImageUrl(mostTrending.poster_path, ImageSizes.poster)\n      },\n      resizeMode: \"cover\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, React.createElement(LinearGradient, {\n      style: styles.actions,\n      colors: [styleVars.gradientLightColor, styleVars.gradientDarkColor],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, React.createElement(Button, {\n      icon: \"play\",\n      style: styles.mainAction,\n      label: \"Play\",\n      onPress: function onPress() {\n        return navigation.push(AppScreens.detail, {\n          mediaType: mostTrending.media_type,\n          id: mostTrending.id\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    })));\n  } else {\n    return null;\n  }\n}\n\nexport default Banner;","map":{"version":3,"sources":["C:/Users/Nguyen/Desktop/GitHub/netflix_clone/screens/home/Banner.js"],"names":["React","LinearGradient","useNavigation","Button","HintLayout","IconButton","LoadingLayout","generateImageUrl","ImageSizes","useTrendingState","styleVars","AppScreens","styles","StyleSheet","create","root","position","aspectRatio","posterAspectRatio","actions","bottom","left","width","paddingHorizontal","paddingVertical","flexDirection","alignItems","justifyContent","height","headerHeight","mainAction","marginHorizontal","Banner","navigation","trending","isLoading","error","length","mostTrending","uri","poster_path","poster","gradientLightColor","gradientDarkColor","push","detail","mediaType","media_type","id"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { ImageBackground, StyleSheet, View } from 'react-native';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { useNavigation } from '@react-navigation/native';\n\nimport { Button, HintLayout, IconButton, LoadingLayout } from 'ui/general';\nimport { generateImageUrl, ImageSizes } from 'utils/tmdb';\nimport { useTrendingState } from 'providers/trending';\nimport styleVars from 'utils/styles';\nimport { AppScreens } from 'utils/screen';\n\nconst styles = StyleSheet.create({\n  root: {\n    position: 'relative',\n    aspectRatio: styleVars.posterAspectRatio,\n  },\n  actions: {\n    bottom: 0,\n    left: 0,\n    width: '100%',\n    position: 'absolute',\n    paddingHorizontal: 10,\n    paddingVertical: 10,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    height: styleVars.headerHeight,\n  },\n  mainAction: {\n    marginHorizontal: 0,\n  },\n});\n\nfunction Banner() {\n  const navigation = useNavigation();\n  const { trending, isLoading, error } = useTrendingState();\n\n  if (isLoading) {\n    return (\n      <View style={styles.root}>\n        <LoadingLayout />\n      </View>\n    );\n  } else if (error) {\n    return (\n      <View style={styles.root}>\n        <HintLayout message=\"Failed to load!\" />\n      </View>\n    );\n  } else if (trending.length > 0) {\n    const mostTrending = trending[0];\n    return (\n      <ImageBackground\n        style={styles.root}\n        source={{\n          uri: generateImageUrl(mostTrending.poster_path, ImageSizes.poster),\n        }}\n        resizeMode=\"cover\"\n      >\n        <LinearGradient\n          style={styles.actions}\n          colors={[styleVars.gradientLightColor, styleVars.gradientDarkColor]}\n        >\n          <Button\n            icon=\"play\"\n            style={styles.mainAction}\n            label=\"Play\"\n            onPress={() =>\n              navigation.push(AppScreens.detail, {\n                mediaType: mostTrending.media_type,\n                id: mostTrending.id,\n              })\n            }\n          />\n        </LinearGradient>\n      </ImageBackground>\n    );\n  } else {\n    return null;\n  }\n}\n\nexport default Banner;\n"]},"metadata":{},"sourceType":"module"}