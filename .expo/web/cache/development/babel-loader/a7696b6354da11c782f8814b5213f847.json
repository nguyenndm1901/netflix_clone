{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Nguyen\\\\Desktop\\\\GitHub\\\\netflix_clone\\\\screens\\\\account\\\\index.js\",\n    _this = this;\n\nimport React from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { signOut } from '~/store/modules/auth/actions';\nimport { TabIcon, Input } from '~/components';\nimport { Container, Form, Text, SaveButton, SaveText } from \"./styles\";\nimport { colors } from '~/styles';\nexport default function Profile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.auth.user;\n  }),\n      name = _useSelector.name,\n      email = _useSelector.email,\n      phone = _useSelector.phone,\n      address = _useSelector.address;\n\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(KeyboardAvoidingView, {\n    enabled: Platform.OS === 'ios',\n    behavior: \"padding\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, React.createElement(ScrollView, {\n    keyboardShouldPersistTaps: \"always\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    size: 22,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"Account Information\"), React.createElement(Input, {\n    placeholder: \"Full Name\",\n    value: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Email\",\n    value: email,\n    keyboardType: \"email-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Phone Number\",\n    value: phone,\n    keyboardType: \"number-pad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }), React.createElement(Input, {\n    placeholder: \"Address\",\n    value: address,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(SaveButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, React.createElement(SaveText, {\n    color: colors.dark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"Save\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    size: 18,\n    top: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 15\n    }\n  }, \"Payment Info\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"Change Password\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"Language\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, \"Terms & Conditions\")), React.createElement(TouchableOpacity, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    size: 18,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Help\")), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return dispatch(signOut());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Exit\"))))));\n}\nProfile.navigationOptions = {\n  tabBarIcon: function tabBarIcon(props) {\n    return React.createElement(TabIcon, _extends({\n      name: \"account-outline\"\n    }, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 24\n      }\n    }));\n  }\n};","map":{"version":3,"sources":["C:/Users/Nguyen/Desktop/GitHub/netflix_clone/screens/account/index.js"],"names":["React","useDispatch","useSelector","signOut","TabIcon","Input","Container","Form","Text","SaveButton","SaveText","colors","Profile","dispatch","state","auth","user","name","email","phone","address","Platform","OS","dark","navigationOptions","tabBarIcon","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAOA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,SAASC,OAAT,QAAwB,8BAAxB;AAEA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,cAA/B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,UAAhC,EAA4CC,QAA5C;AACA,SAASC,MAAT,QAAuB,UAAvB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAEA,qBAAwCC,WAAW,CAAC,UAAAY,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAN,CAAWC,IAAf;AAAA,GAAN,CAAnD;AAAA,MAAQC,IAAR,gBAAQA,IAAR;AAAA,MAAcC,KAAd,gBAAcA,KAAd;AAAA,MAAqBC,KAArB,gBAAqBA,KAArB;AAAA,MAA4BC,OAA5B,gBAA4BA,OAA5B;;AAEA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEC,QAAQ,CAACC,EAAT,KAAgB,KAA/C;AAAsD,IAAA,QAAQ,EAAC,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,yBAAyB,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAGE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,WAAnB;AAA+B,IAAA,KAAK,EAAEL,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,YAAY,EAAC,eAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASE,oBAAC,KAAD;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,KAAK,EAAEC,KAFT;AAGE,IAAA,YAAY,EAAC,YAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAcE,oBAAC,KAAD;AAAO,IAAA,WAAW,EAAC,SAAnB;AAA6B,IAAA,KAAK,EAAEC,OAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAgBE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAET,MAAM,CAACY,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAhBF,EAoBE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAgB,IAAA,GAAG,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CApBF,EAyBE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAzBF,EA4BE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,CA5BF,EA+BE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CA/BF,EAkCE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAlCF,EAsCE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EAAE;AAAA,aAAMV,QAAQ,CAACV,OAAO,EAAR,CAAd;AAAA,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAtCF,CADF,CADF,CADF,CADF;AAkDD;AAEDS,OAAO,CAACY,iBAAR,GAA4B;AAC1BC,EAAAA,UAAU,EAAE,oBAAAC,KAAK;AAAA,WAAI,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAC;AAAd,OAAoCA,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAJ;AAAA;AADS,CAA5B","sourcesContent":["import React from 'react';\nimport {\n  TouchableOpacity,\n  KeyboardAvoidingView,\n  Platform,\n  ScrollView,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { signOut } from '~/store/modules/auth/actions';\n\nimport { TabIcon, Input } from '~/components';\nimport { Container, Form, Text, SaveButton, SaveText } from './styles';\nimport { colors } from '~/styles';\n\nexport default function Profile() {\n  const dispatch = useDispatch();\n\n  const { name, email, phone, address } = useSelector(state => state.auth.user);\n\n  return (\n    <Container>\n      <KeyboardAvoidingView enabled={Platform.OS === 'ios'} behavior=\"padding\">\n        <ScrollView keyboardShouldPersistTaps=\"always\">\n          <Form>\n            <Text size={22}>Account Information</Text>\n\n            <Input placeholder=\"Full Name\" value={name} />\n            <Input\n              placeholder=\"Email\"\n              value={email}\n              keyboardType=\"email-address\"\n            />\n            <Input\n              placeholder=\"Phone Number\"\n              value={phone}\n              keyboardType=\"number-pad\"\n            />\n            <Input placeholder=\"Address\" value={address} />\n\n            <SaveButton>\n              <SaveText color={colors.dark}>Save</SaveText>\n            </SaveButton>\n\n            <TouchableOpacity>\n              <Text size={18} top>\n                Payment Info\n              </Text>\n            </TouchableOpacity>\n            <TouchableOpacity>\n              <Text size={18}>Change Password</Text>\n            </TouchableOpacity>\n            <TouchableOpacity>\n              <Text size={18}>Language</Text>\n            </TouchableOpacity>\n            <TouchableOpacity>\n              <Text size={18}>Terms & Conditions</Text>\n            </TouchableOpacity>\n            <TouchableOpacity>\n              <Text size={18}>Help</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={() => dispatch(signOut())}>\n              <Text size={20}>Exit</Text>\n            </TouchableOpacity>\n          </Form>\n        </ScrollView>\n      </KeyboardAvoidingView>\n    </Container>\n  );\n}\n\nProfile.navigationOptions = {\n  tabBarIcon: props => <TabIcon name=\"account-outline\" {...props} />,\n};"]},"metadata":{},"sourceType":"module"}