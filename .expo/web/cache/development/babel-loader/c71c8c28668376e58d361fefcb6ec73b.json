{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Nguyen\\\\Desktop\\\\GitHub\\\\netflix_clone\\\\screens\\\\search\\\\SearchResults.js\";\nimport React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { HintLayout, LoadingLayout, Text } from \"../../ui/general\";\nimport { useSearchActions, useSearchState } from \"../../providers/search\";\nimport MediaGrid from \"../../ui/MediaGrid\";\nvar styles = StyleSheet.create({\n  root: {\n    flexGrow: 1,\n    paddingBottom: 100\n  },\n  hint: {\n    margin: 10\n  },\n  slides: {\n    height: '100%',\n    marginBottom: 10,\n    paddingHorizontal: 5\n  },\n  card: {\n    padding: 5,\n    width: '33.33%'\n  },\n  row: {\n    flexDirection: 'row'\n  }\n});\n\nfunction SearchResults() {\n  var _useSearchState = useSearchState(),\n      isLoading = _useSearchState.isLoading,\n      error = _useSearchState.error,\n      results = _useSearchState.results,\n      searchedKw = _useSearchState.searchedKw;\n\n  var _useSearchActions = useSearchActions(),\n      fetchResults = _useSearchActions.fetchResults;\n\n  if (isLoading) {\n    return React.createElement(LoadingLayout, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 12\n      }\n    });\n  } else if (error) {\n    return React.createElement(HintLayout, {\n      message: \"Failed to load results\",\n      actionLabel: \"Try again\",\n      actionFn: fetchResults,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    });\n  } else if (results.length > 0) {\n    return React.createElement(ScrollView, {\n      style: styles.root,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, React.createElement(Text, {\n      style: styles.hint,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, \"Showing \", results.length, \" results for \", searchedKw), React.createElement(MediaGrid, {\n      list: results,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  } else if (searchedKw.length === 0) {\n    return React.createElement(HintLayout, {\n      message: \"Search for your favorite movies and tv series\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return React.createElement(HintLayout, {\n      message: \"No results found!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 12\n      }\n    });\n  }\n}\n\nexport default SearchResults;","map":{"version":3,"sources":["C:/Users/Nguyen/Desktop/GitHub/netflix_clone/screens/search/SearchResults.js"],"names":["React","HintLayout","LoadingLayout","Text","useSearchActions","useSearchState","MediaGrid","styles","StyleSheet","create","root","flexGrow","paddingBottom","hint","margin","slides","height","marginBottom","paddingHorizontal","card","padding","width","row","flexDirection","SearchResults","isLoading","error","results","searchedKw","fetchResults","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAGA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,IAApC;AACA,SAASC,gBAAT,EAA2BC,cAA3B;AACA,OAAOC,SAAP;AAEA,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,aAAa,EAAE;AAFX,GADyB;AAK/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GALyB;AAQ/BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,MAAM,EAAE,MADF;AAENC,IAAAA,YAAY,EAAE,EAFR;AAGNC,IAAAA,iBAAiB,EAAE;AAHb,GARuB;AAa/BC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,CADL;AAEJC,IAAAA,KAAK,EAAE;AAFH,GAbyB;AAiB/BC,EAAAA,GAAG,EAAE;AACHC,IAAAA,aAAa,EAAE;AADZ;AAjB0B,CAAlB,CAAf;;AAsBA,SAASC,aAAT,GAAyB;AACvB,wBAAkDnB,cAAc,EAAhE;AAAA,MAAQoB,SAAR,mBAAQA,SAAR;AAAA,MAAmBC,KAAnB,mBAAmBA,KAAnB;AAAA,MAA0BC,OAA1B,mBAA0BA,OAA1B;AAAA,MAAmCC,UAAnC,mBAAmCA,UAAnC;;AACA,0BAAyBxB,gBAAgB,EAAzC;AAAA,MAAQyB,YAAR,qBAAQA,YAAR;;AAEA,MAAIJ,SAAJ,EAAe;AACb,WAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAFD,MAEO,IAAIC,KAAJ,EAAW;AAChB,WACE,oBAAC,UAAD;AACE,MAAA,OAAO,EAAC,wBADV;AAEE,MAAA,WAAW,EAAC,WAFd;AAGE,MAAA,QAAQ,EAAEG,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARM,MAQA,IAAIF,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AAC7B,WACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEvB,MAAM,CAACG,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEH,MAAM,CAACM,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWc,OAAO,CAACG,MADnB,mBACwCF,UADxC,CADF,EAIE,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CADF;AAQD,GATM,MASA,IAAIC,UAAU,CAACE,MAAX,KAAsB,CAA1B,EAA6B;AAClC,WACE,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,+CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJM,MAIA;AACL,WAAO,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,mBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF;;AAED,eAAeN,aAAf","sourcesContent":["import React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\n\nimport { HintLayout, LoadingLayout, Text } from 'ui/general';\nimport { useSearchActions, useSearchState } from 'providers/search';\nimport MediaGrid from 'ui/MediaGrid';\n\nconst styles = StyleSheet.create({\n  root: {\n    flexGrow: 1,\n    paddingBottom: 100,\n  },\n  hint: {\n    margin: 10,\n  },\n  slides: {\n    height: '100%',\n    marginBottom: 10,\n    paddingHorizontal: 5,\n  },\n  card: {\n    padding: 5,\n    width: '33.33%',\n  },\n  row: {\n    flexDirection: 'row',\n  },\n});\n\nfunction SearchResults() {\n  const { isLoading, error, results, searchedKw } = useSearchState();\n  const { fetchResults } = useSearchActions();\n\n  if (isLoading) {\n    return <LoadingLayout />;\n  } else if (error) {\n    return (\n      <HintLayout\n        message=\"Failed to load results\"\n        actionLabel=\"Try again\"\n        actionFn={fetchResults}\n      />\n    );\n  } else if (results.length > 0) {\n    return (\n      <ScrollView style={styles.root}>\n        <Text style={styles.hint}>\n          Showing {results.length} results for {searchedKw}\n        </Text>\n        <MediaGrid list={results} />\n      </ScrollView>\n    );\n  } else if (searchedKw.length === 0) {\n    return (\n      <HintLayout message=\"Search for your favorite movies and tv series\" />\n    );\n  } else {\n    return <HintLayout message=\"No results found!\" />;\n  }\n}\n\nexport default SearchResults;\n"]},"metadata":{},"sourceType":"module"}